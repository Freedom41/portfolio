{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","href","id","src","alt","class","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4MAkEeA,MA9Df,WACE,OACE,yBAAKC,UAAU,OACZ,yBAAKA,UAAU,UACb,6BACC,uBAAGC,KAAK,UAAR,IAAkB,uCAAlB,KACA,uBAAGA,KAAK,aAAR,IAAqB,0CAArB,KACA,uBAAGA,KAAK,YAAR,IAAoB,yCAApB,OAGH,yBAAKD,UAAU,kBAAkBE,GAAG,SACnC,yBAAKF,UAAU,MAAMG,IAAI,gFAAgFC,IAAI,gBAC7G,sEAED,yBAAKJ,UAAU,WAAWE,GAAG,YAC3B,yBAAKF,UAAU,WACd,uBAAGC,KAAK,6CAAR,IAAqD,yBAAKD,UAAU,aAAaG,IAAI,6EAA6EC,IAAI,gBAAtK,MACC,+EAEH,yBAAKJ,UAAU,WACb,uBAAGC,KAAK,mCAAR,IAA2C,yBAAKD,UAAU,aAAaG,IAAI,wEAAwEC,IAAI,gBAAvJ,MACA,2EAEF,yBAAKJ,UAAU,WACb,uBAAGC,KAAK,6CAAR,IAAqD,yBAAKD,UAAU,aAAaG,IAAI,wEAAwEC,IAAI,gBAAjK,MACA,6DAEF,yBAAKJ,UAAU,WACb,uBAAGC,KAAK,4CAAR,IAAoD,yBAAKD,UAAU,aAAaG,IAAI,8EAA8EC,IAAI,gBAAtK,MACA,mFAEF,yBAAKJ,UAAU,WACb,uBAAGC,KAAK,gCAAR,IAAwC,yBAAKD,UAAU,aAAaG,IAAI,yEAAyEC,IAAI,gBAArJ,MACA,yEAEF,yBAAKJ,UAAU,WACb,uBAAGC,KAAK,4CAAR,IAAoD,yBAAKD,UAAU,aAAaG,IAAI,yEAAyEC,IAAI,gBAAjK,MACA,kHAEF,yBAAKJ,UAAU,WACb,uBAAGC,KAAK,oCAAR,IAA4C,yBAAKD,UAAU,aAAaG,IAAI,6EAA6EC,IAAI,gBAA7J,MACA,sGAEF,yBAAKJ,UAAU,WACb,uBAAGC,KAAK,oCAAR,IAA4C,yBAAKD,UAAU,aAAaG,IAAI,iFAAiFC,IAAI,gBAAjK,MACA,4FAEF,yBAAKJ,UAAU,WACb,uBAAGC,KAAK,sCAAR,IAA8C,yBAAKD,UAAU,aAAaG,IAAI,4EAA4EC,IAAI,gBAA9J,MACA,oJAGH,yBAAKJ,UAAU,SAASE,GAAG,WAC1B,uBAAGD,KAAK,gCAAR,IAAwC,uBAAGI,MAAM,iBAAT,KAAxC,KACA,uBAAGJ,KAAK,0DAAR,IAAkE,uBAAGI,MAAM,uBAA3E,KACA,uBAAGJ,KAAK,gCAA+B,uBAAGI,MAAM,mBAAhD,KACA,uBAAGJ,KAAK,0CAAR,IAAkD,uBAAGI,MAAM,0BAA3D,QChDYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f256ab1b.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <div className=\"header\">\n         <nav>\n          <a href=\"#about\"> <li> About </li> </a>\n          <a href=\"#projects\"> <li> Projects </li> </a>\n          <a href=\"#contact\"> <li> Contact </li> </a>\n         </nav>\n       </div>\n       <div className=\"welcome-section\" id=\"about\">\n        <img className=\"img\" src=\"https://res.cloudinary.com/freedom41/image/upload/v1504431461/mark_pe3k1c.jpg\" alt=\"Profile Pic\" /> \n        <p> Full Stack Web Developer. MERN stack </p>\n       </div>\n       <div className=\"projects\" id=\"projects\">\n         <div className=\"project\" >\n          <a href=\"https://codepen.io/Freedom41/full/RwbrJyK\"> <img className=\"projectImg\" src=\"https://res.cloudinary.com/freedom41/image/upload/v1574624753/pomodoro.png\" alt=\"project img\"/>  </a>\n           <p> Pomodoro timer built with React, CSS and HTML </p>\n         </div>\n        <div className=\"project\">\n          <a href=\"https://simple-js-cal.surge.sh/\"> <img className=\"projectImg\" src=\"https://res.cloudinary.com/freedom41/image/upload/v1574624755/cal.png\" alt=\"project img\" />  </a>\n          <p> Calculator built with React, CSS and HTML </p>\n        </div>\n        <div className=\"project\">\n          <a href=\"https://codepen.io/Freedom41/full/vYYjzmR\"> <img className=\"projectImg\" src=\"https://res.cloudinary.com/freedom41/image/upload/v1574626940/map.png\" alt=\"project img\" />  </a>\n          <p> Built with D3, CSS and HTML </p>\n        </div>  \n        <div className=\"project\">\n          <a href=\"https://codepen.io/Freedom41/full/EBxXZB\"> <img className=\"projectImg\" src=\"https://res.cloudinary.com/freedom41/image/upload/v1574625517/previewer.png\" alt=\"project img\" />  </a>\n          <p> Markdown Previewer Built with React, CSS and HTML </p>\n        </div>\n        <div className=\"project\">\n          <a href=\"https://drumfree41.surge.sh/\"> <img className=\"projectImg\" src=\"https://res.cloudinary.com/freedom41/image/upload/v1574624754/drum.png\" alt=\"project img\" />  </a>\n          <p> Drum App built with React, CSS and HTML </p>\n        </div>\n        <div className=\"project\">\n          <a href=\"https://codepen.io/Freedom41/full/wywGNX\"> <img className=\"projectImg\" src=\"https://res.cloudinary.com/freedom41/image/upload/v1574627320/wiki.png\" alt=\"project img\" />  </a>\n          <p> Wikipedia Viewer built with Vanilla JS, CSS and HTML, uses the official wiki API.</p>\n        </div>\n        <div className=\"project\">\n          <a href=\"https://fast-phalange.glitch.me/\"> <img className=\"projectImg\" src=\"https://res.cloudinary.com/freedom41/image/upload/v1574628029/exercise.png\" alt=\"project img\" />  </a>\n          <p> Exercise tracker built with Mongoose, Express, Node JS, CSS and HTML </p>\n        </div>\n        <div className=\"project\">\n          <a href=\"https://frill-stretch.glitch.me/\"> <img className=\"projectImg\" src=\"https://res.cloudinary.com/freedom41/image/upload/v1574628221/filemetadata.png\" alt=\"project img\" />  </a>\n          <p> File MetaData API, built with NodeJS, Express and HTML/CSS </p>\n        </div>\n        <div className=\"project\">\n          <a href=\"https://successful-fish.glitch.me/\"> <img className=\"projectImg\" src=\"https://res.cloudinary.com/freedom41/image/upload/v1574628432/anonmsg.png\" alt=\"project img\" />  </a>\n          <p> Anon Chat App built with HTML, CSS , Mongoose, Express, NodeJS. Testing done with CHai and Mocha. CRUD implemented</p>\n        </div>\n       </div>\n       <div className=\"footer\" id=\"contact\">\n        <a href=\"https://github.com/Freedom41\"> <i class=\"fab fa-github\"> </i> </a>\n        <a href=\"https://www.linkedin.com/in/mark-mascarenhas-194b9272/\"> <i class=\"fab fa-linkedin-in\"></i> </a>\n        <a href=\"https://codepen.io/Freedom41\"><i class=\"fab fa-codepen\"></i> </a>\n        <a href=\"https://www.freecodecamp.org/freedom41\"> <i class=\"fab fa-free-code-camp\"></i> </a>\n       </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}